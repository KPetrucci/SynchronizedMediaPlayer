buildscript {
    ext.kotlin_version = '1.0.3'
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.standardout.versioneye" version "1.4.0"
    id "net.ltgt.apt" version "0.6"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'idea'

group 'me.noahandrews.mediaplayersync'
version '0.3-SNAPSHOT'

sourceSets {
    main.kotlin.srcDirs += 'src/main/java'
}

versioneye {
    dependencies = transitive
    includePlugins = false
    exclude 'testCompile', 'testRuntime', 'testCompileClasspath', 'testCompileOnly'
}

mainClassName = "me.noahandrews.mediaplayersync.javafx.MainApplication"

sourceCompatibility = 1.8

if (System.getenv('CI') != 'true') {
    assemble.finalizedBy(versionEyeUpdate)
    test.finalizedBy(versionEyeUpdate)
    run.finalizedBy(versionEyeUpdate)
}

repositories {
    jcenter()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    mavenLocal()
}

dependencies {
    compile group: 'me.noahandrews.savpp', name: 'savpp-core', version: '0.0.1-SNAPSHOT', changing: true
    compile group: 'me.noahandrews.savpp', name: 'savpp-server', version: '0.0.1-SNAPSHOT', changing: true
    compile group: 'me.noahandrews.savpp', name: 'savpp-client', version: '0.0.1-SNAPSHOT', changing: true

    compile 'io.reactivex:rxjava:1.1.8'
    compile 'io.reactivex:rxjavafx:0.1.4'

    compile 'com.google.dagger:dagger:2.5'
    apt 'com.google.dagger:dagger-compiler:2.5'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile 'org.apache.logging.log4j:log4j-api:2.6.2'
    compile 'org.apache.logging.log4j:log4j-core:2.6.2'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.testfx:testfx-core:4.0.+'
    testCompile 'org.testfx:testfx-junit:4.0.+'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked"
}

jar {
    destinationDir = file('build/jar')
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

/*
idea {
    module {
        sourceDirs += file("build/generated/source/apt/main");
    }
}*/

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}